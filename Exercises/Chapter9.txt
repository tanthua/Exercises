
namespace hua_9_1 {
	void print(int n, int max) {
		if (n <= max) {
			cout << setw(n * 4) << "This was written by call number" << n << endl;
			print_9_1(n + 1, max);
			cout << setw(n * 4) << "This ALSO written by call number" << n << endl;
		}
	}

}

namespace hua_9_2 {
	void print(string prefix, unsigned int levels) {

	if (levels > 0) {
		for (int i = 1; i < 3; ++i) {
			string s = prefix;
			s += char('0' + i);
			s += '.';
			print_9_2(s, levels - 1);
		}
	}
	else {
		cout << prefix << endl;
	}

}

}

namespace hua_9_3 {
	void print(string first, string second) {
		if (first.size() > 0) {
			for (size_t i = 0; i < first.size(); ++i) {
				string tempFirst = first;
				string tempSecond = second;
				tempSecond.insert(0, 1, first.at(i));
				tempFirst.erase(i, 1);
				print(tempFirst, tempSecond);
			}
		}
		else {
			cout << second << endl;
		}
	}
}

namespace hua_9_4 {
	static size_t COUNT = 0;
	void program(size_t user_input, string box) {
		COUNT += user_input;
		if (user_input > 0) {
			//
			for (size_t i = 1; i <= user_input; ++i) {
				string tempBox = box;
				tempBox += char('0' + i);
				tempBox += '.';
				size_t input;
				cout << "How many unnumbered boxes can you see in box number " << tempBox << " ?" << endl;
				cin >> input;
				program(input, tempBox);
			}
		}
		else {
			cout << box << endl;
		}
	}

	/* Main 
		size_t input;
		cout << "How many unnumbered boxes can you see?" << endl;
		cin >> input;
		hua_9_4::program(input, "");
		cout << hua_9_4::COUNT << endl;
		return 0;
	*/
}

namespace hua_9_5 {
	double sumover(unsigned int n) {
		if (n == 0) {
			return 0;
		}
		else {
			return (1 / double(n) + sumover(n-1));
		}
	}
}